Question 01:

from datetime import datetime, timedelta
def dform(gvndt):
	 nw = gvndt 
	 print("7 days before today: ",nw - timedelta(days=7) )

gvndt = datetime(2024,3,22,10,0,0)
dform(gvndt)

--------------------------------------------------------------------------------
                
Question 02:

from datetime import datetime, timedelta
def dform(gvndt):
	nw = gvndt
        print("7 days after today: ",nw + timedelta(days=7) )

gvndt = datetime(2024,3,22,10,0,0)
dform(gvndt)

--------------------------------------------------------------------------------

Question 03:

from datetime import datetime,timedelta

def tendays(td):
	for i in range(10):
		 newdate = td + timedelta(weeks = 2 * i)
                 print(newdate.strftime("%Y,%m,%d"))

td = datetime.now()
tendays(td)

--------------------------------------------------------------------------------

Question 04:

from datetime import datetime, timedelta

def datediff(sndate, endate):
	ndate = edate - sdate
        print(ndate.days,"days")

sdate = datetime(2020,2,25)
edate = datetime(2020,9,17)
datediff(sdate,edate)

-------------------------------------------------------------------------------

Question 05:

from datetime import datetime

now = datetime.now()

print("a) Current date and time:", now)
print("b) Current year in full:", now.strftime("%Y"))
print("c) Month of year (full name):", now.strftime("%B"))
print("d) Weekday of the week:", now.strftime("%A"))
print("e) Day of the month:", now.strftime("%d"))
print("f) Day of week (full name):", now.strftime("%A"))

------------------------------------------------------------------------------

Question 06:

class triangle:
	 def __init__(self, angle1,angle2,angle3):
		 self.angle1 = angle1
                 self.angle2 = angle2
                 self.angle3 = angle3
                 self.no_of_sides = 3

	 def check_angles(self):
	 	return self.angle1 + self.angle2 + self.angle3 ==180

my_triangle = triangle(90,30,60)
print("No of sides: ",(my_triangle.no_of_sides))
print("Check angle : ",my_triangle.check_angles())
                                                                                                
------------------------------------------------------------------------------
Question 07:

class Songs:
	def __init__(self,lyrics):
		self.lyrics = lyrics

	def sing_me_a_song(self):
		for line in self.lyrics:
			print(line)

happy_bday = Songs(["May god bleass you,","Have a sunshine on you,","Happy Birthday to you !"])
happy_bday.sing_me_a_song()
                                                                        
------------------------------------------------------------------------------

Question 08:

class Lunch:
        def __init__(self,menu):
        	self.menu = menu

	def menu_price(self):
		if self.menu == "menu 1":
			print("Your choice: ",self.menu,"price is 12.00")
		elif self.menu == "menu 2":
                        print("Your choice: ",self.menu,"price is 13.40")
                else:
                	 print("Error in menu")
                                                                                                                                                    
-----------------------------------------------------------------------------

Question 09:

class Case:
        def __init__(self,s):
                self.s = s

        def get_String(self):
                return self.s
        def print_String(self):
                print(self.s.upper())

s = input("Enter string: ")
Str = Case(s)
Str.print_String()

----------------------------------------------------------------------------

Question 10.

class Rectangle:
	def __init__(self,L,B):
        	self.L = L
                self.B = B

	def area(self):
        	return L * B

	def perimeter(self):
		return 2*(L +B)

L = int(input("Enter Length of a Rectangle: "))
B = int(input("Enter Breadth of a rectangel: "))

rect = Rectangle(L,B)
while True:
	print("1.Area,\n2.Perimeter\n3.Exit")
        ip = int(input("Enter your choice: "))
        if ip ==1:
        	print(f"Area of rectangle with length {L} and breadth {B} is {rect.area()}")
        elif ip ==2:
        	print(f"Perimeter of rectangle with length {L} and breadth {B} is {rect.perimeter()}")
        elif ip == 3:
        	break
        else:
        	print("Invalid input")
                                                                                                                           
------------------------------------------------------------------------------
